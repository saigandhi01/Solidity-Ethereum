{
	"id": "41d009bd0cd4efe675373588325feb54",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.18",
	"solcLongVersion": "0.4.18+commit.9cf6e910",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/calculator.sol": {
				"content": "pragma solidity 0.4.18; \r\n\r\ncontract calculator{ \r\n\r\nuint number; \r\n\r\n/*uint multiply; \r\n\r\nuint divide; \r\n\r\nuint plus; \r\n\r\nuint subtract; */\r\n\r\n\r\n\r\nfunction Integer(uint theNumber){ \r\n\r\nnumber = theNumber; \r\n\r\n} \r\n\r\n\r\n\r\nfunction Multiplier(uint multiplyAmount){ \r\n\r\n//multiply = multiplyAmount; \r\n\r\nnumber = number * multiplyAmount; \r\n\r\n} \r\n\r\n\r\n\r\nfunction Divider(uint divideAmount){ \r\n\r\n//divide = divideAmount; \r\n\r\nnumber = number / divideAmount; \r\n\r\n} \r\n\r\n\r\n\r\nfunction AddAmount(uint addAmount){ \r\n\r\n//plus = addAmount; \r\n\r\nnumber = number + addAmount; \r\n\r\n} \r\n\r\n\r\n\r\nfunction SubtractAmount(uint subtractAmount){ \r\n\r\n//subtract = subtractAmount; \r\n\r\nnumber = number - subtractAmount; \r\n\r\n} \r\n\r\n\r\n\r\nfunction getAnswer() constant returns (uint){ \r\n\r\nreturn number; \r\n\r\n} \r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"contracts/calculator.sol": {
				"calculator": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "divideAmount",
									"type": "uint256"
								}
							],
							"name": "Divider",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "subtractAmount",
									"type": "uint256"
								}
							],
							"name": "SubtractAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "multiplyAmount",
									"type": "uint256"
								}
							],
							"name": "Multiplier",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "theNumber",
									"type": "uint256"
								}
							],
							"name": "Integer",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "addAmount",
									"type": "uint256"
								}
							],
							"name": "AddAmount",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "getAnswer",
							"outputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/calculator.sol\":28:777  contract calculator{ \r... */\n  mstore(0x40, 0x60)\n  jumpi(tag_1, iszero(callvalue))\n  0x0\n  dup1\n  revert\ntag_1:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/calculator.sol\":28:777  contract calculator{ \r... */\n      mstore(0x40, 0x60)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x4793504e\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x53a454e0\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x5677abcc\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x6a270ba1\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x7d89f040\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x9c16667c\n      eq\n      tag_7\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"contracts/calculator.sol\":347:454  function Divider(uint divideAmount){ \r... */\n    tag_2:\n      jumpi(tag_8, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_8:\n      tag_9\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_10)\n    tag_9:\n      stop\n        /* \"contracts/calculator.sol\":570:692  function SubtractAmount(uint subtractAmount){ \r... */\n    tag_3:\n      jumpi(tag_11, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_11:\n      tag_12\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_13)\n    tag_12:\n      stop\n        /* \"contracts/calculator.sol\":220:338  function Multiplier(uint multiplyAmount){ \r... */\n    tag_4:\n      jumpi(tag_14, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_14:\n      tag_15\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_16)\n    tag_15:\n      stop\n        /* \"contracts/calculator.sol\":148:211  function Integer(uint theNumber){ \r... */\n    tag_5:\n      jumpi(tag_17, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_17:\n      tag_18\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_19)\n    tag_18:\n      stop\n        /* \"contracts/calculator.sol\":463:561  function AddAmount(uint addAmount){ \r... */\n    tag_6:\n      jumpi(tag_20, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_20:\n      tag_21\n      0x4\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap2\n      swap1\n      pop\n      pop\n      jump(tag_22)\n    tag_21:\n      stop\n        /* \"contracts/calculator.sol\":701:771  function getAnswer() constant returns (uint){ \r... */\n    tag_7:\n      jumpi(tag_23, iszero(callvalue))\n      0x0\n      dup1\n      revert\n    tag_23:\n      tag_24\n      jump(tag_25)\n    tag_24:\n      mload(0x40)\n      dup1\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/calculator.sol\":347:454  function Divider(uint divideAmount){ \r... */\n    tag_10:\n        /* \"contracts/calculator.sol\":435:447  divideAmount */\n      dup1\n        /* \"contracts/calculator.sol\":426:432  number */\n      sload(0x0)\n        /* \"contracts/calculator.sol\":426:447  number / divideAmount */\n      dup2\n      iszero\n      iszero\n      tag_27\n      jumpi\n      invalid\n    tag_27:\n      div\n        /* \"contracts/calculator.sol\":417:423  number */\n      0x0\n        /* \"contracts/calculator.sol\":417:447  number = number / divideAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/calculator.sol\":347:454  function Divider(uint divideAmount){ \r... */\n      pop\n      jump\t// out\n        /* \"contracts/calculator.sol\":570:692  function SubtractAmount(uint subtractAmount){ \r... */\n    tag_13:\n        /* \"contracts/calculator.sol\":671:685  subtractAmount */\n      dup1\n        /* \"contracts/calculator.sol\":662:668  number */\n      sload(0x0)\n        /* \"contracts/calculator.sol\":662:685  number - subtractAmount */\n      sub\n        /* \"contracts/calculator.sol\":653:659  number */\n      0x0\n        /* \"contracts/calculator.sol\":653:685  number = number - subtractAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/calculator.sol\":570:692  function SubtractAmount(uint subtractAmount){ \r... */\n      pop\n      jump\t// out\n        /* \"contracts/calculator.sol\":220:338  function Multiplier(uint multiplyAmount){ \r... */\n    tag_16:\n        /* \"contracts/calculator.sol\":317:331  multiplyAmount */\n      dup1\n        /* \"contracts/calculator.sol\":308:314  number */\n      sload(0x0)\n        /* \"contracts/calculator.sol\":308:331  number * multiplyAmount */\n      mul\n        /* \"contracts/calculator.sol\":299:305  number */\n      0x0\n        /* \"contracts/calculator.sol\":299:331  number = number * multiplyAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/calculator.sol\":220:338  function Multiplier(uint multiplyAmount){ \r... */\n      pop\n      jump\t// out\n        /* \"contracts/calculator.sol\":148:211  function Integer(uint theNumber){ \r... */\n    tag_19:\n        /* \"contracts/calculator.sol\":195:204  theNumber */\n      dup1\n        /* \"contracts/calculator.sol\":186:192  number */\n      0x0\n        /* \"contracts/calculator.sol\":186:204  number = theNumber */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/calculator.sol\":148:211  function Integer(uint theNumber){ \r... */\n      pop\n      jump\t// out\n        /* \"contracts/calculator.sol\":463:561  function AddAmount(uint addAmount){ \r... */\n    tag_22:\n        /* \"contracts/calculator.sol\":545:554  addAmount */\n      dup1\n        /* \"contracts/calculator.sol\":536:542  number */\n      sload(0x0)\n        /* \"contracts/calculator.sol\":536:554  number + addAmount */\n      add\n        /* \"contracts/calculator.sol\":527:533  number */\n      0x0\n        /* \"contracts/calculator.sol\":527:554  number = number + addAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/calculator.sol\":463:561  function AddAmount(uint addAmount){ \r... */\n      pop\n      jump\t// out\n        /* \"contracts/calculator.sol\":701:771  function getAnswer() constant returns (uint){ \r... */\n    tag_25:\n        /* \"contracts/calculator.sol\":740:744  uint */\n      0x0\n        /* \"contracts/calculator.sol\":758:764  number */\n      dup1\n      sload\n        /* \"contracts/calculator.sol\":751:764  return number */\n      swap1\n      pop\n        /* \"contracts/calculator.sol\":701:771  function getAnswer() constant returns (uint){ \r... */\n      swap1\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820b0eaa572649a0ede68d5365b7daad1303c48d615a6aab0ce248b0219e51db1db0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6060604052341561000f57600080fd5b6101d58061001e6000396000f300606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634793504e1461007d57806353a454e0146100a05780635677abcc146100c35780636a270ba1146100e65780637d89f040146101095780639c16667c1461012c575b600080fd5b341561008857600080fd5b61009e6004808035906020019091905050610155565b005b34156100ab57600080fd5b6100c1600480803590602001909190505061016c565b005b34156100ce57600080fd5b6100e4600480803590602001909190505061017a565b005b34156100f157600080fd5b6101076004808035906020019091905050610188565b005b341561011457600080fd5b61012a6004808035906020019091905050610192565b005b341561013757600080fd5b61013f6101a0565b6040518082815260200191505060405180910390f35b8060005481151561016257fe5b0460008190555050565b806000540360008190555050565b806000540260008190555050565b8060008190555050565b806000540160008190555050565b600080549050905600a165627a7a72305820b0eaa572649a0ede68d5365b7daad1303c48d615a6aab0ce248b0219e51db1db0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1D5 DUP1 PUSH2 0x1E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4793504E EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x53A454E0 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x5677ABCC EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x6A270BA1 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x7D89F040 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x9C16667C EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x16C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x192 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 SLOAD DUP2 ISZERO ISZERO PUSH2 0x162 JUMPI INVALID JUMPDEST DIV PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD SUB PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD MUL PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb0 0xea 0xa5 PUSH19 0x649A0EDE68D5365B7DAAD1303C48D615A6AAB0 0xce 0x24 DUP12 MUL NOT 0xe5 0x1d 0xb1 0xdb STOP 0x29 ",
							"sourceMap": "28:749:0:-;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "606060405260043610610078576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680634793504e1461007d57806353a454e0146100a05780635677abcc146100c35780636a270ba1146100e65780637d89f040146101095780639c16667c1461012c575b600080fd5b341561008857600080fd5b61009e6004808035906020019091905050610155565b005b34156100ab57600080fd5b6100c1600480803590602001909190505061016c565b005b34156100ce57600080fd5b6100e4600480803590602001909190505061017a565b005b34156100f157600080fd5b6101076004808035906020019091905050610188565b005b341561011457600080fd5b61012a6004808035906020019091905050610192565b005b341561013757600080fd5b61013f6101a0565b6040518082815260200191505060405180910390f35b8060005481151561016257fe5b0460008190555050565b806000540360008190555050565b806000540260008190555050565b8060008190555050565b806000540160008190555050565b600080549050905600a165627a7a72305820b0eaa572649a0ede68d5365b7daad1303c48d615a6aab0ce248b0219e51db1db0029",
							"opcodes": "PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x78 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x4793504E EQ PUSH2 0x7D JUMPI DUP1 PUSH4 0x53A454E0 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x5677ABCC EQ PUSH2 0xC3 JUMPI DUP1 PUSH4 0x6A270BA1 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0x7D89F040 EQ PUSH2 0x109 JUMPI DUP1 PUSH4 0x9C16667C EQ PUSH2 0x12C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE ISZERO PUSH2 0x88 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9E PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x155 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xAB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x16C JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xCE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xE4 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x17A JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0xF1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x107 PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x188 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH1 0x4 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP2 SWAP1 POP POP PUSH2 0x192 JUMP JUMPDEST STOP JUMPDEST CALLVALUE ISZERO PUSH2 0x137 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x13F PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST DUP1 PUSH1 0x0 SLOAD DUP2 ISZERO ISZERO PUSH2 0x162 JUMPI INVALID JUMPDEST DIV PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD SUB PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD MUL PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST DUP1 PUSH1 0x0 SLOAD ADD PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD SWAP1 POP SWAP1 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xb0 0xea 0xa5 PUSH19 0x649A0EDE68D5365B7DAAD1303C48D615A6AAB0 0xce 0x24 DUP12 MUL NOT 0xe5 0x1d 0xb1 0xdb STOP 0x29 ",
							"sourceMap": "28:749:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;347:107;;;;;;;;;;;;;;;;;;;;;;;;;;570:122;;;;;;;;;;;;;;;;;;;;;;;;;;220:118;;;;;;;;;;;;;;;;;;;;;;;;;;148:63;;;;;;;;;;;;;;;;;;;;;;;;;;463:98;;;;;;;;;;;;;;;;;;;;;;;;;;701:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;347:107;435:12;426:6;;:21;;;;;;;;417:6;:30;;;;347:107;:::o;570:122::-;671:14;662:6;;:23;653:6;:32;;;;570:122;:::o;220:118::-;317:14;308:6;;:23;299:6;:32;;;;220:118;:::o;148:63::-;195:9;186:6;:18;;;;148:63;:::o;463:98::-;545:9;536:6;;:18;527:6;:27;;;;463:98;:::o;701:70::-;740:4;758:6;;751:13;;701:70;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "93800",
								"executionCost": "136",
								"totalCost": "93936"
							},
							"external": {
								"AddAmount(uint256)": "20472",
								"Divider(uint256)": "20409",
								"Integer(uint256)": "20244",
								"Multiplier(uint256)": "20430",
								"SubtractAmount(uint256)": "20406",
								"getAnswer()": "504"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 28,
									"end": 777,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "MSTORE"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "CALLVALUE"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "ISZERO"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "JUMPI"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "REVERT"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "JUMPDEST"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "DUP1"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "CODECOPY"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 28,
									"end": 777,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820b0eaa572649a0ede68d5365b7daad1303c48d615a6aab0ce248b0219e51db1db0029",
									".code": [
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "MSTORE"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "LT"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "SWAP1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "DIV"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "AND"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "4793504E"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "53A454E0"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "5677ABCC"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "6A270BA1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "7D89F040"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "9C16667C"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "EQ"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "JUMPI"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "JUMPDEST"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "DUP1"
										},
										{
											"begin": 28,
											"end": 777,
											"name": "REVERT"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "CALLVALUE"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "ISZERO"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "JUMPI"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "REVERT"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "DUP1"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "ADD"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "SWAP2"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "SWAP1"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "JUMP"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "JUMPDEST"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "STOP"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "JUMPDEST"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "CALLVALUE"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "ISZERO"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "JUMPI"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "DUP1"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "REVERT"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "JUMPDEST"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "DUP1"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "DUP1"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "SWAP1"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "ADD"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "SWAP1"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "SWAP2"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "SWAP1"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "JUMP"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "JUMPDEST"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "STOP"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "CALLVALUE"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "ISZERO"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "JUMPI"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "REVERT"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "DUP1"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "SWAP1"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "ADD"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "SWAP1"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "SWAP2"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "SWAP1"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "POP"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "POP"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "JUMP"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "JUMPDEST"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "STOP"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "JUMPDEST"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "CALLVALUE"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "ISZERO"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "JUMPI"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "DUP1"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "REVERT"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "JUMPDEST"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "DUP1"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "DUP1"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "SWAP1"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "ADD"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "SWAP1"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "SWAP2"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "SWAP1"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "JUMP"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "JUMPDEST"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "STOP"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "CALLVALUE"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "ISZERO"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "JUMPI"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "DUP1"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "REVERT"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "PUSH [tag]",
											"value": "21"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "DUP1"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "DUP1"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "SWAP1"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "ADD"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "SWAP1"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "SWAP2"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "SWAP1"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "POP"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "POP"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "JUMP"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "tag",
											"value": "21"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "STOP"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "JUMPDEST"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "CALLVALUE"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "ISZERO"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "JUMPI"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "DUP1"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "REVERT"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "JUMPDEST"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "JUMP"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "JUMPDEST"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "MLOAD"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "DUP1"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "DUP3"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "DUP2"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "MSTORE"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "ADD"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "SWAP2"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "POP"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "POP"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "MLOAD"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "DUP1"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "SWAP2"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "SUB"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "RETURN"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 447,
											"name": "DUP1"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 426,
											"end": 432,
											"name": "SLOAD"
										},
										{
											"begin": 426,
											"end": 447,
											"name": "DUP2"
										},
										{
											"begin": 426,
											"end": 447,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 447,
											"name": "ISZERO"
										},
										{
											"begin": 426,
											"end": 447,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 426,
											"end": 447,
											"name": "JUMPI"
										},
										{
											"begin": 426,
											"end": 447,
											"name": "INVALID"
										},
										{
											"begin": 426,
											"end": 447,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 426,
											"end": 447,
											"name": "JUMPDEST"
										},
										{
											"begin": 426,
											"end": 447,
											"name": "DIV"
										},
										{
											"begin": 417,
											"end": 423,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 417,
											"end": 447,
											"name": "DUP2"
										},
										{
											"begin": 417,
											"end": 447,
											"name": "SWAP1"
										},
										{
											"begin": 417,
											"end": 447,
											"name": "SSTORE"
										},
										{
											"begin": 417,
											"end": 447,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "POP"
										},
										{
											"begin": 347,
											"end": 454,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "JUMPDEST"
										},
										{
											"begin": 671,
											"end": 685,
											"name": "DUP1"
										},
										{
											"begin": 662,
											"end": 668,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 662,
											"end": 668,
											"name": "SLOAD"
										},
										{
											"begin": 662,
											"end": 685,
											"name": "SUB"
										},
										{
											"begin": 653,
											"end": 659,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 653,
											"end": 685,
											"name": "DUP2"
										},
										{
											"begin": 653,
											"end": 685,
											"name": "SWAP1"
										},
										{
											"begin": 653,
											"end": 685,
											"name": "SSTORE"
										},
										{
											"begin": 653,
											"end": 685,
											"name": "POP"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "POP"
										},
										{
											"begin": 570,
											"end": 692,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "JUMPDEST"
										},
										{
											"begin": 317,
											"end": 331,
											"name": "DUP1"
										},
										{
											"begin": 308,
											"end": 314,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 308,
											"end": 314,
											"name": "SLOAD"
										},
										{
											"begin": 308,
											"end": 331,
											"name": "MUL"
										},
										{
											"begin": 299,
											"end": 305,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "DUP2"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "SWAP1"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "SSTORE"
										},
										{
											"begin": 299,
											"end": 331,
											"name": "POP"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "POP"
										},
										{
											"begin": 220,
											"end": 338,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "JUMPDEST"
										},
										{
											"begin": 195,
											"end": 204,
											"name": "DUP1"
										},
										{
											"begin": 186,
											"end": 192,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 186,
											"end": 204,
											"name": "DUP2"
										},
										{
											"begin": 186,
											"end": 204,
											"name": "SWAP1"
										},
										{
											"begin": 186,
											"end": 204,
											"name": "SSTORE"
										},
										{
											"begin": 186,
											"end": 204,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "POP"
										},
										{
											"begin": 148,
											"end": 211,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "JUMPDEST"
										},
										{
											"begin": 545,
											"end": 554,
											"name": "DUP1"
										},
										{
											"begin": 536,
											"end": 542,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 536,
											"end": 542,
											"name": "SLOAD"
										},
										{
											"begin": 536,
											"end": 554,
											"name": "ADD"
										},
										{
											"begin": 527,
											"end": 533,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 527,
											"end": 554,
											"name": "DUP2"
										},
										{
											"begin": 527,
											"end": 554,
											"name": "SWAP1"
										},
										{
											"begin": 527,
											"end": 554,
											"name": "SSTORE"
										},
										{
											"begin": 527,
											"end": 554,
											"name": "POP"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "POP"
										},
										{
											"begin": 463,
											"end": 561,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "JUMPDEST"
										},
										{
											"begin": 740,
											"end": 744,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 758,
											"end": 764,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 764,
											"name": "SLOAD"
										},
										{
											"begin": 751,
											"end": 764,
											"name": "SWAP1"
										},
										{
											"begin": 751,
											"end": 764,
											"name": "POP"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "SWAP1"
										},
										{
											"begin": 701,
											"end": 771,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"AddAmount(uint256)": "7d89f040",
							"Divider(uint256)": "4793504e",
							"Integer(uint256)": "6a270ba1",
							"Multiplier(uint256)": "5677abcc",
							"SubtractAmount(uint256)": "53a454e0",
							"getAnswer()": "9c16667c"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.18+commit.9cf6e910\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"divideAmount\",\"type\":\"uint256\"}],\"name\":\"Divider\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"subtractAmount\",\"type\":\"uint256\"}],\"name\":\"SubtractAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"multiplyAmount\",\"type\":\"uint256\"}],\"name\":\"Multiplier\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"theNumber\",\"type\":\"uint256\"}],\"name\":\"Integer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"addAmount\",\"type\":\"uint256\"}],\"name\":\"AddAmount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getAnswer\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/calculator.sol\":\"calculator\"},\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/calculator.sol\":{\"keccak256\":\"0x66e3a447c7283de22a1d1ba6504ae5fc9c414414bd0e8410eff7f4609a28c35f\",\"urls\":[\"bzzr://04f0a12073d0edef06634cf1a444c728216e0a7b7cfc115053a79a6d58b14585\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "contracts/calculator.sol:17:1: Warning: No visibility specified. Defaulting to \"public\".\nfunction Integer(uint theNumber){ \r\n^\nSpanning multiple lines.\n",
				"message": "No visibility specified. Defaulting to \"public\".",
				"severity": "warning",
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/calculator.sol:25:1: Warning: No visibility specified. Defaulting to \"public\".\nfunction Multiplier(uint multiplyAmount){ \r\n^\nSpanning multiple lines.\n",
				"message": "No visibility specified. Defaulting to \"public\".",
				"severity": "warning",
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/calculator.sol:35:1: Warning: No visibility specified. Defaulting to \"public\".\nfunction Divider(uint divideAmount){ \r\n^\nSpanning multiple lines.\n",
				"message": "No visibility specified. Defaulting to \"public\".",
				"severity": "warning",
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/calculator.sol:45:1: Warning: No visibility specified. Defaulting to \"public\".\nfunction AddAmount(uint addAmount){ \r\n^\nSpanning multiple lines.\n",
				"message": "No visibility specified. Defaulting to \"public\".",
				"severity": "warning",
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/calculator.sol:55:1: Warning: No visibility specified. Defaulting to \"public\".\nfunction SubtractAmount(uint subtractAmount){ \r\n^\nSpanning multiple lines.\n",
				"message": "No visibility specified. Defaulting to \"public\".",
				"severity": "warning",
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "contracts/calculator.sol:65:1: Warning: No visibility specified. Defaulting to \"public\".\nfunction getAnswer() constant returns (uint){ \r\n^\nSpanning multiple lines.\n",
				"message": "No visibility specified. Defaulting to \"public\".",
				"severity": "warning",
				"type": "Warning"
			}
		],
		"sources": {
			"contracts/calculator.sol": {
				"ast": {
					"absolutePath": "contracts/calculator.sol",
					"exportedSymbols": {
						"calculator": [
							70
						]
					},
					"id": 71,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.4",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 70,
							"linearizedBaseContracts": [
								70
							],
							"name": "calculator",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"name": "number",
									"nodeType": "VariableDeclaration",
									"scope": 70,
									"src": "53:11:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "53:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 12,
										"nodeType": "Block",
										"src": "180:31:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 8,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "186:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 9,
														"name": "theNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "195:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "186:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 11,
												"nodeType": "ExpressionStatement",
												"src": "186:18:0"
											}
										]
									},
									"id": 13,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Integer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"name": "theNumber",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "165:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "165:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "164:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "180:0:0"
									},
									"scope": 70,
									"src": "148:63:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "260:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 18,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "299:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 19,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "308:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"argumentTypes": null,
															"id": 20,
															"name": "multiplyAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "317:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "308:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "299:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "299:32:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Multiplier",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 15,
												"name": "multiplyAmount",
												"nodeType": "VariableDeclaration",
												"scope": 25,
												"src": "240:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 14,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "240:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "239:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "260:0:0"
									},
									"scope": 70,
									"src": "220:118:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "382:72:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 30,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "417:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 31,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "426:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"id": 32,
															"name": "divideAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "435:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "426:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "417:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "417:30:0"
											}
										]
									},
									"id": 37,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "Divider",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"name": "divideAmount",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "364:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 26,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "364:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "363:19:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "382:0:0"
									},
									"scope": 70,
									"src": "347:107:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 48,
										"nodeType": "Block",
										"src": "497:64:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 46,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 42,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "527:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 45,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 43,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "536:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"argumentTypes": null,
															"id": 44,
															"name": "addAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "545:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "536:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "527:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 47,
												"nodeType": "ExpressionStatement",
												"src": "527:27:0"
											}
										]
									},
									"id": 49,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "AddAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"name": "addAmount",
												"nodeType": "VariableDeclaration",
												"scope": 49,
												"src": "482:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 38,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "482:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "481:16:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "497:0:0"
									},
									"scope": 70,
									"src": "463:98:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "614:78:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 54,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "653:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"id": 55,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3,
															"src": "662:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "-",
														"rightExpression": {
															"argumentTypes": null,
															"id": 56,
															"name": "subtractAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 51,
															"src": "671:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "662:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "653:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 59,
												"nodeType": "ExpressionStatement",
												"src": "653:32:0"
											}
										]
									},
									"id": 61,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "SubtractAmount",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"name": "subtractAmount",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "594:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 50,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "594:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "593:21:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "614:0:0"
									},
									"scope": 70,
									"src": "570:122:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "745:26:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 66,
													"name": "number",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "758:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 65,
												"id": 67,
												"nodeType": "Return",
												"src": "751:13:0"
											}
										]
									},
									"id": 69,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "getAnswer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "719:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 69,
												"src": "740:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "740:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "739:6:0"
									},
									"scope": 70,
									"src": "701:70:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 71,
							"src": "28:749:0"
						}
					],
					"src": "0:777:0"
				},
				"id": 0,
				"legacyAST": {
					"attributes": {
						"absolutePath": "contracts/calculator.sol",
						"exportedSymbols": {
							"calculator": [
								70
							]
						}
					},
					"children": [
						{
							"attributes": {
								"literals": [
									"solidity",
									"0.4",
									".18"
								]
							},
							"id": 1,
							"name": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"attributes": {
								"baseContracts": [
									null
								],
								"contractDependencies": [
									null
								],
								"contractKind": "contract",
								"documentation": null,
								"fullyImplemented": true,
								"linearizedBaseContracts": [
									70
								],
								"name": "calculator",
								"scope": 71
							},
							"children": [
								{
									"attributes": {
										"constant": false,
										"name": "number",
										"scope": 70,
										"stateVariable": true,
										"storageLocation": "default",
										"type": "uint256",
										"value": null,
										"visibility": "internal"
									},
									"children": [
										{
											"attributes": {
												"name": "uint",
												"type": "uint256"
											},
											"id": 2,
											"name": "ElementaryTypeName",
											"src": "53:4:0"
										}
									],
									"id": 3,
									"name": "VariableDeclaration",
									"src": "53:11:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "Integer",
										"payable": false,
										"scope": 70,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "theNumber",
														"scope": 13,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 4,
															"name": "ElementaryTypeName",
															"src": "165:4:0"
														}
													],
													"id": 5,
													"name": "VariableDeclaration",
													"src": "165:14:0"
												}
											],
											"id": 6,
											"name": "ParameterList",
											"src": "164:16:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 7,
											"name": "ParameterList",
											"src": "180:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "number"
																	},
																	"id": 8,
																	"name": "Identifier",
																	"src": "186:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 5,
																		"type": "uint256",
																		"value": "theNumber"
																	},
																	"id": 9,
																	"name": "Identifier",
																	"src": "195:9:0"
																}
															],
															"id": 10,
															"name": "Assignment",
															"src": "186:18:0"
														}
													],
													"id": 11,
													"name": "ExpressionStatement",
													"src": "186:18:0"
												}
											],
											"id": 12,
											"name": "Block",
											"src": "180:31:0"
										}
									],
									"id": 13,
									"name": "FunctionDefinition",
									"src": "148:63:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "Multiplier",
										"payable": false,
										"scope": 70,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "multiplyAmount",
														"scope": 25,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 14,
															"name": "ElementaryTypeName",
															"src": "240:4:0"
														}
													],
													"id": 15,
													"name": "VariableDeclaration",
													"src": "240:19:0"
												}
											],
											"id": 16,
											"name": "ParameterList",
											"src": "239:21:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 17,
											"name": "ParameterList",
											"src": "260:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "number"
																	},
																	"id": 18,
																	"name": "Identifier",
																	"src": "299:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "*",
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 3,
																				"type": "uint256",
																				"value": "number"
																			},
																			"id": 19,
																			"name": "Identifier",
																			"src": "308:6:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 15,
																				"type": "uint256",
																				"value": "multiplyAmount"
																			},
																			"id": 20,
																			"name": "Identifier",
																			"src": "317:14:0"
																		}
																	],
																	"id": 21,
																	"name": "BinaryOperation",
																	"src": "308:23:0"
																}
															],
															"id": 22,
															"name": "Assignment",
															"src": "299:32:0"
														}
													],
													"id": 23,
													"name": "ExpressionStatement",
													"src": "299:32:0"
												}
											],
											"id": 24,
											"name": "Block",
											"src": "260:78:0"
										}
									],
									"id": 25,
									"name": "FunctionDefinition",
									"src": "220:118:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "Divider",
										"payable": false,
										"scope": 70,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "divideAmount",
														"scope": 37,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 26,
															"name": "ElementaryTypeName",
															"src": "364:4:0"
														}
													],
													"id": 27,
													"name": "VariableDeclaration",
													"src": "364:17:0"
												}
											],
											"id": 28,
											"name": "ParameterList",
											"src": "363:19:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 29,
											"name": "ParameterList",
											"src": "382:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "number"
																	},
																	"id": 30,
																	"name": "Identifier",
																	"src": "417:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "/",
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 3,
																				"type": "uint256",
																				"value": "number"
																			},
																			"id": 31,
																			"name": "Identifier",
																			"src": "426:6:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 27,
																				"type": "uint256",
																				"value": "divideAmount"
																			},
																			"id": 32,
																			"name": "Identifier",
																			"src": "435:12:0"
																		}
																	],
																	"id": 33,
																	"name": "BinaryOperation",
																	"src": "426:21:0"
																}
															],
															"id": 34,
															"name": "Assignment",
															"src": "417:30:0"
														}
													],
													"id": 35,
													"name": "ExpressionStatement",
													"src": "417:30:0"
												}
											],
											"id": 36,
											"name": "Block",
											"src": "382:72:0"
										}
									],
									"id": 37,
									"name": "FunctionDefinition",
									"src": "347:107:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "AddAmount",
										"payable": false,
										"scope": 70,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "addAmount",
														"scope": 49,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 38,
															"name": "ElementaryTypeName",
															"src": "482:4:0"
														}
													],
													"id": 39,
													"name": "VariableDeclaration",
													"src": "482:14:0"
												}
											],
											"id": 40,
											"name": "ParameterList",
											"src": "481:16:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 41,
											"name": "ParameterList",
											"src": "497:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "number"
																	},
																	"id": 42,
																	"name": "Identifier",
																	"src": "527:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "+",
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 3,
																				"type": "uint256",
																				"value": "number"
																			},
																			"id": 43,
																			"name": "Identifier",
																			"src": "536:6:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 39,
																				"type": "uint256",
																				"value": "addAmount"
																			},
																			"id": 44,
																			"name": "Identifier",
																			"src": "545:9:0"
																		}
																	],
																	"id": 45,
																	"name": "BinaryOperation",
																	"src": "536:18:0"
																}
															],
															"id": 46,
															"name": "Assignment",
															"src": "527:27:0"
														}
													],
													"id": 47,
													"name": "ExpressionStatement",
													"src": "527:27:0"
												}
											],
											"id": 48,
											"name": "Block",
											"src": "497:64:0"
										}
									],
									"id": 49,
									"name": "FunctionDefinition",
									"src": "463:98:0"
								},
								{
									"attributes": {
										"constant": false,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "SubtractAmount",
										"payable": false,
										"scope": 70,
										"stateMutability": "nonpayable",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "subtractAmount",
														"scope": 61,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 50,
															"name": "ElementaryTypeName",
															"src": "594:4:0"
														}
													],
													"id": 51,
													"name": "VariableDeclaration",
													"src": "594:19:0"
												}
											],
											"id": 52,
											"name": "ParameterList",
											"src": "593:21:0"
										},
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 53,
											"name": "ParameterList",
											"src": "614:0:0"
										},
										{
											"children": [
												{
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"operator": "=",
																"type": "uint256"
															},
															"children": [
																{
																	"attributes": {
																		"argumentTypes": null,
																		"overloadedDeclarations": [
																			null
																		],
																		"referencedDeclaration": 3,
																		"type": "uint256",
																		"value": "number"
																	},
																	"id": 54,
																	"name": "Identifier",
																	"src": "653:6:0"
																},
																{
																	"attributes": {
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"operator": "-",
																		"type": "uint256"
																	},
																	"children": [
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 3,
																				"type": "uint256",
																				"value": "number"
																			},
																			"id": 55,
																			"name": "Identifier",
																			"src": "662:6:0"
																		},
																		{
																			"attributes": {
																				"argumentTypes": null,
																				"overloadedDeclarations": [
																					null
																				],
																				"referencedDeclaration": 51,
																				"type": "uint256",
																				"value": "subtractAmount"
																			},
																			"id": 56,
																			"name": "Identifier",
																			"src": "671:14:0"
																		}
																	],
																	"id": 57,
																	"name": "BinaryOperation",
																	"src": "662:23:0"
																}
															],
															"id": 58,
															"name": "Assignment",
															"src": "653:32:0"
														}
													],
													"id": 59,
													"name": "ExpressionStatement",
													"src": "653:32:0"
												}
											],
											"id": 60,
											"name": "Block",
											"src": "614:78:0"
										}
									],
									"id": 61,
									"name": "FunctionDefinition",
									"src": "570:122:0"
								},
								{
									"attributes": {
										"constant": true,
										"implemented": true,
										"isConstructor": false,
										"modifiers": [
											null
										],
										"name": "getAnswer",
										"payable": false,
										"scope": 70,
										"stateMutability": "view",
										"superFunction": null,
										"visibility": "public"
									},
									"children": [
										{
											"attributes": {
												"parameters": [
													null
												]
											},
											"children": [],
											"id": 62,
											"name": "ParameterList",
											"src": "719:2:0"
										},
										{
											"children": [
												{
													"attributes": {
														"constant": false,
														"name": "",
														"scope": 69,
														"stateVariable": false,
														"storageLocation": "default",
														"type": "uint256",
														"value": null,
														"visibility": "internal"
													},
													"children": [
														{
															"attributes": {
																"name": "uint",
																"type": "uint256"
															},
															"id": 63,
															"name": "ElementaryTypeName",
															"src": "740:4:0"
														}
													],
													"id": 64,
													"name": "VariableDeclaration",
													"src": "740:4:0"
												}
											],
											"id": 65,
											"name": "ParameterList",
											"src": "739:6:0"
										},
										{
											"children": [
												{
													"attributes": {
														"functionReturnParameters": 65
													},
													"children": [
														{
															"attributes": {
																"argumentTypes": null,
																"overloadedDeclarations": [
																	null
																],
																"referencedDeclaration": 3,
																"type": "uint256",
																"value": "number"
															},
															"id": 66,
															"name": "Identifier",
															"src": "758:6:0"
														}
													],
													"id": 67,
													"name": "Return",
													"src": "751:13:0"
												}
											],
											"id": 68,
											"name": "Block",
											"src": "745:26:0"
										}
									],
									"id": 69,
									"name": "FunctionDefinition",
									"src": "701:70:0"
								}
							],
							"id": 70,
							"name": "ContractDefinition",
							"src": "28:749:0"
						}
					],
					"id": 71,
					"name": "SourceUnit",
					"src": "0:777:0"
				}
			}
		}
	}
}